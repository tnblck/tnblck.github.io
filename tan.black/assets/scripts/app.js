var scroll=new LocomotiveScroll({el:document.querySelector("[data-scroll-container]"),smooth:!0,getDirection:!0});scroll.on("scroll",(e=>{ScrollTrigger.update(),document.documentElement.setAttribute("data-scrolling",e.direction)})),ScrollTrigger.scrollerProxy("[data-scroll-container]",{scrollTop(e){return arguments.length?scroll.scrollTo(e,0,0):scroll.scroll.instance.scroll.y},getBoundingClientRect:()=>({top:0,left:0,width:window.innerWidth,height:window.innerHeight}),pinType:document.querySelector("[data-scroll-container]").style.transform?"transform":"fixed"}),ScrollTrigger.defaults({scroller:"[data-scroll-container]"});let vh=.01*window.innerHeight;document.documentElement.style.setProperty("--vh",`${vh}px`);var currentMousePos={x:-1,y:-1};function cClientCarousel(e,t){t=$(t);var o=$(".js-carousel--media",t),a=$(".js-carousel--content",t),i=$(".js-carousel-index",t);$(window).width()>=1230?$(".media_slide",o).each((function(){textFit($(this).find(".line_text")[0],{alignVert:!0,alignVertWithFlexbox:!0,minFontSize:120,maxFontSize:220,widthOnly:!0}),$(this).find(".title_line, .line_text").css("height",$(this).find(".textFitted").outerHeight()+"px")})):$(".media_slide",o).each((function(){textFit($(this).find(".line_text")[0],{minFontSize:30,maxFontSize:72,widthOnly:!0})})),o.slick({arrows:!1,asNavFor:a,centerMode:!0,centerPadding:"160px",slidesToShow:1,focusOnSelect:!0,speed:500,touchThreshold:40,variableWidth:!1,vertical:!0,verticalSwiping:!0,responsive:[{breakpoint:1681,settings:{centerPadding:"140px"}},{breakpoint:1231,settings:{centerMode:!1,centerPadding:"0",variableWidth:!0,vertical:!1,verticalSwiping:!1}}]}),a.slick({arrows:!1,asNavFor:o,fade:!0,draggable:!1,slidesToShow:1,speed:500,responsive:[{breakpoint:1231,settings:{draggable:!0}}]}),a.on("beforeChange",(function(e,t,o,a){i.text("00"+(a+1)+"/")})),scroll.update(),$(".slick-list",o).attr({"data-cursor":"2","data-cursor-label":"HOLD + DRAG"})}function cHeader(e,t){t=$(t),$(".header_inline",t);var o=$(".header_nav",t),a=$(".js-menu-toggle",t);scroll.on("scroll",(e=>{parseInt(e.scroll.y)<300?t.removeClass("has-scrolled"):t.addClass("has-scrolled")})),a.on("click",(function(){$("body").hasClass("has-open-menu")?($("body").removeClass("has-open-menu"),scroll.start(),$(window).width()<1024&&$("html, body").css({"overflow-y":"auto"})):($("body").addClass("has-open-menu"),scroll.stop(),$(window).width()<1024&&$("html, body").css({"overflow-y":"hidden"}))})),$(".item_link",o).on("click",(function(){$("body").removeClass("has-open-menu"),scroll.start(),$(window).width()<1024&&$("html, body").css({"overflow-y":"auto"})})),scroll.update()}function cSectorIndex(e,t){t=$(t);var o=$(".listing_item",t);if($(window).width()>1230){var a=$(".item_reveal",o).outerHeight();$(window).on("mousemove",(function(e){gsap.to($(".item_reveal",t),.4,{x:e.pageX,ease:Quart.easeOut},0)})),o.on({mousemove:function(e){var t=$(this).offset().top,o=e.pageY-t;gsap.to($(this).find(".item_reveal"),.4,{y:-(a/2-o),ease:Quart.easeOut},0)},mouseenter:function(e){$(this).css("z-index","20"),gsap.timeline({defaults:{ease:Quart.easeOut}}).to($(this).find(".item_reveal"),.4,{scale:1,opacity:1},0).to($(this).find(".reveal_media"),.6,{scale:1},0).to($(this).find(".media_src"),.6,{scale:1},0)},mouseleave:function(e){$(this).css("z-index","1"),gsap.timeline({defaults:{ease:Quart.easeOut}}).to($(this).find(".item_reveal"),.4,{scale:.8,opacity:0},0).to($(this).find(".reveal_media"),.6,{scale:1.2},0).to($(this).find(".media_src"),.6,{scale:1},0)}})}}function fnInViewDetection(){gsap.set($('[data-inview-child="1"], [data-inview-child="2"]'),{opacity:0,y:40},0),$('[data-inview-parent="1"]').each((function(e,t){var o=(t=$(t)).attr("data-module"),a=t.attr("class").split(" ").join(".");oParentModule=t.closest("[data-module]");var i=o?'[data-module="'+o+'"]':'[data-module="'+oParentModule.attr("data-module")+'"] .'+a;tlInViewLoad=gsap.timeline({scrollTrigger:i,delay:0,repeat:0}),$('[data-inview-child="1"]',t).length>0&&tlInViewLoad.to($('[data-inview-child="1"]',t),1,{opacity:1,y:0,stagger:{amount:.5},ease:Quart.easeOut},1),$('[data-inview-child="2"]',t).length>0&&tlInViewLoad.to($('[data-inview-child="2"]',t),1,{opacity:1,y:0,stagger:{amount:3},ease:Quart.easeOut},1)}))}function oCursor(){var e=$(".o-cursor"),t=$(".cursor_inner",e),o=$(".cursor_outer",e),a=$(".cursor_label",e);if($(window).width()>1230){$(window).one("mousemove",(function(){gsap.to(e,.6,{autoAlpha:1,ease:Quart.easeInOut})})),$(window).on("mousemove",(function(e){gsap.to(t,.1,{x:e.clientX,y:e.clientY}),gsap.to([o,a],.4,{x:e.clientX,y:e.clientY})})),$('[data-cursor="1"]').hover((function(){gsap.to(t,.3,{opacity:1,scale:1.5}),gsap.to(o,.3,{opacity:0,scale:0}),e.addClass("is-style--1")}),(function(a){gsap.to(t,.3,{opacity:0,scale:1}),gsap.to(o,.3,{opacity:1,scale:1}),e.removeClass("is-style--1")})),$('[data-cursor="2"]').hover((function(){gsap.to(o,.3,{opacity:0,scale:0}),$(".inner_text",a).text($(this).attr("data-cursor-label")),gsap.to(a,.4,{opacity:1,scale:1}),e.addClass("is-style--2")}),(function(t){gsap.to(o,.3,{opacity:1,scale:1}),gsap.to(a,.4,{opacity:0,scale:.3}),e.removeClass("is-style--2")}))}}$(document).mousemove((function(e){currentMousePos.x=e.pageX,currentMousePos.y=e.pageY})),document.documentElement.classList.add("is-loaded"),document.documentElement.classList.remove("is-loading"),setTimeout((()=>{document.documentElement.classList.add("is-ready")}),300),function(e){"use strict";setTimeout((()=>{e(".c-header").each(cHeader),fnInViewDetection(),e(".c-client-carousel").each(cClientCarousel),e(".c-sector-index").each(cSectorIndex),oCursor()}),1e3)}(jQuery),ScrollTrigger.addEventListener("refresh",(()=>scroll.update())),ScrollTrigger.refresh();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
